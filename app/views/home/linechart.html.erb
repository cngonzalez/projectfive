
<!DOCTYPE html>
<html >
  <head>
    <meta charset="UTF-8">
    <title>nvd3 linechart</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    
    
    <link rel='stylesheet prefetch' href='http://cdnjs.cloudflare.com/ajax/libs/nvd3/1.8.1/nv.d3.css'>
    
  </head>

  <body>
  <div id="theta" data-theta="<%= @theta %>"></div>
  <div id="term1" data-first="<%= @term1 %>"></div>
  <div id="term2" data-second="<%= @term2 %>"></div>

  <div id="chart">
    <svg></svg>
  </div>
    <script src='http://cdnjs.cloudflare.com/ajax/libs/d3/3.5.16/d3.js'></script>
<script src='http://cdnjs.cloudflare.com/ajax/libs/nvd3/1.8.1/nv.d3.js'></script>

        <!-- <script src="js/index.js"></script> -->
<script type="text/javascript">
  var theta = $("#theta").data("theta");
  var first = $("#term1").data("first");
  var second = $("#term2").data("second");
  console.log(theta);

  var fetchData = function(n1, n2) {
    $.ajax({
      type: "GET",
      url: "/assets/food_price.csv",
      dataType: "text",
      success: function(data) {  
        parsedData = d3.csv.parse(data);   
        firstData = Object.keys(parsedData[0])[2];
        secondData = Object.keys(parsedData[0])[3];

        var p_data = parseData(parsedData, firstData, secondData);
        buildLineChart(p_data, firstData, secondData);
      }
    });
  }

  fetchData("Meat Price Index", "Dairy Price Index");

  function buildLineChart(parsedData, firstData, secondData) {
    nv.addGraph(function() {
      var chart = nv.models.lineChart()
        .useInteractiveGuideline(true)
        ;
      // chart.forceX([100, 200]);
      // chart.forceY([100, 200]);
      chart.xAxis
        .axisLabel(firstData)
        .tickFormat(d3.format('.02f'))
        ;

      chart.yAxis
        .axisLabel(secondData)
        .tickFormat(d3.format('.02f'))
        ;
      
      d3.select('#chart svg')
        .datum(parsedData)
        .transition().duration(500)
        .call(chart)
        ;

      nv.utils.windowResize(chart.update);

      return chart;
    });
  }

 function parseData(data, term1, term2) {
    var r = [];

    var max = Math.max.apply(Math, data.map(function(o){
      return o[term1];
    }));

    var min = Math.min.apply(Math, data.map(function(o){
      return o[term2];
    }));

    for (var i = min; i <= max; i++) {
      var prediction = theta * i;
      r.push({x: i, y: prediction});
    }

    return [
      {
        values: r,
        key: 'Prediction',
        color: '#E91E63'
      }
    ];
  }

</script>
    
    
    
  </body>
</html>